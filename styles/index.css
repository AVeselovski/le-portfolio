@tailwind base;
@tailwind components;
@tailwind utilities;

/*
Rules:

1. When there's more than 2 tailwind classes on element, they are extracted into a custom class.
2. Applied custom classes (@apply) are separated by layout, styling, pseudo for some structure.
    .example {
      @apply flex items-center p-2;
      @apply text-lg text-gray-500 bg-gray-50;
      @apply hover:bg-gray-100;
    }
3. Custom rules allowed.
*/

/* Containers */

.container {
  @apply max-w-3xl px-4 pb-8 mx-auto;
}
.content-container {
  @apply sm:px-6;
}

/* Navigation links */

.nav-link {
  @apply py-2 px-3;
  @apply rounded;
  @apply hover:bg-gray-100 hover:text-blue-600;
}
.nav-link.active {
  @apply text-gray-900 bg-gray-200;
  @apply hover:bg-gray-200;
}

/* Tags */

.tag-container {
  @apply flex flex-wrap gap-1;
}

.tag {
  @apply block py-0.5 px-2;
  @apply rounded-full border text-sm;
}

/* Markdown */

.markdown h2 {
  @apply mb-4 mt-6;
  @apply text-3xl;
}
.markdown h3 {
  @apply mb-4 mt-6;
  @apply text-2xl;
}
.markdown h4 {
  @apply mb-4 mt-6;
  @apply text-xl;
}
.markdown p {
  @apply mb-4;

  line-height: 1.7;
  word-break: break-word;
}
.markdown ol {
  @apply pl-6 my-1;

  list-style-type: decimal;
}
.markdown ul {
  @apply pl-6 my-1;

  list-style-type: circle;
}
.markdown li {
  @apply my-1;

  line-height: 1.7;
  word-break: break-word;
}
.markdown p code,
.markdown ol code,
.markdown ul code {
  @apply p-1 px-2;
  @apply bg-gray-100 rounded text-indigo-600 text-sm;
}
.markdown pre {
  @apply mb-4 pb-0;
}
.markdown pre > pre {
  @apply rounded-md;

  padding-bottom: 0 !important;
}
.markdown a {
  @apply text-blue-500 underline;
}

/* Pins */

.pin {
  @apply block mb-4;
  @apply text-2xl;
}

/** 
 * Trick to get NextJS Image component responsive without pre-defining height/width.
 * Courtesy of https://dev.to/felixhaeberle/responsive-fix-for-the-next-js-image-component-1351.
 * Not used, but leaving here just in case.
 **/
.image-container {
  width: 100%;
}
.image-container > div {
  position: unset !important;
}
.image-container .image {
  object-fit: contain;
  width: 100% !important;
  position: relative !important;
  height: unset !important;
}
